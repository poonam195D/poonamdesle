# ========================
# Stage 1: Builder Setup
# ========================
FROM ubuntu:24.04 as builder

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    apt-transport-https \
    software-properties-common \
    unzip \
    tar \
    git \
    bash \
    build-essential \
    sudo \
    openssh-server \
    vim \
    snapd \
    python3-pip \
    pipx \
    openjdk-17-jdk \
    nodejs \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Docker CLI
RUN mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
       tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Docker Compose v2.32.1
RUN curl -SL https://github.com/docker/compose/releases/download/v2.32.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose && ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

# Install Apache Maven
RUN curl -fsSL https://archive.apache.org/dist/maven/maven-3/3.8.7/binaries/apache-maven-3.8.7-bin.tar.gz | \
    tar -xz -C /opt && ln -s /opt/apache-maven-3.8.7 /opt/maven

# Set environment variables
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV MAVEN_HOME=/opt/maven
ENV PATH="${JAVA_HOME}/bin:${MAVEN_HOME}/bin:$PATH"

# Install AWS CLI
RUN pipx install awscli && pip3 install awscli --upgrade --break-system-packages

# Install Antora
RUN npm install -g @antora/cli

# Add entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# ========================
# Stage 2: Final Image
# ========================
FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive

# Minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    sudo \
    git \
    openssh-server \
    bash \
    curl \
    vim \
    python3-pip \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy tools from builder
COPY --from=builder /usr/local/bin/docker-compose /usr/local/bin/docker-compose
COPY --from=builder /usr/bin/docker /usr/bin/docker
COPY --from=builder /usr/bin/docker* /usr/bin/
COPY --from=builder /usr/bin/containerd* /usr/bin/
COPY --from=builder /usr/bin/ctr /usr/bin/
COPY --from=builder /usr/bin/runc /usr/bin/
COPY --from=builder /opt/maven /opt/maven
COPY --from=builder /usr/lib/jvm/java-17-openjdk-amd64 /usr/lib/jvm/java-17-openjdk-amd64
COPY --from=builder /usr/lib/python3/dist-packages/awscli /usr/lib/python3/dist-packages/awscli
COPY --from=builder /usr/local/bin/aws /usr/local/bin/aws
COPY --from=builder /usr/bin/aws_completer /usr/bin/aws_completer
COPY --from=builder /usr/local/lib/python3* /usr/local/lib/python3*
COPY --from=builder /usr/lib/node_modules /usr/lib/node_modules
COPY --from=builder /usr/bin/node /usr/bin/node
COPY --from=builder /usr/bin/npm /usr/bin/npm
COPY --from=builder /entrypoint.sh /home/jenkins/entrypoint.sh

ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV MAVEN_HOME=/opt/maven
ENV PATH="${JAVA_HOME}/bin:${MAVEN_HOME}/bin:$PATH"

# Create Jenkins user
RUN useradd -m -s /bin/bash jenkins && \
    echo "jenkins ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    usermod -aG docker jenkins && \
    mkdir -p /home/jenkins/agent && \
    chown -R jenkins:jenkins /home/jenkins

RUN chmod +x /home/jenkins/entrypoint.sh

WORKDIR /home/jenkins/agent

USER jenkins

ENTRYPOINT ["/home/jenkins/entrypoint.sh"]
